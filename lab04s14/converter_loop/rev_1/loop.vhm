--
-- Written by Synplicity
-- Product Version "E-201103-SP2"
-- Program "Synplify Pro", Mapper "maprc, Build 507R"
-- Thu Mar 06 12:20:25 2014
--

--
-- Written by Synplify Pro version Build 507R
-- Thu Mar 06 12:20:25 2014
--

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity AND2 is
port(
  O :  out std_logic;
  I0 :  in std_logic;
  I1 :  in std_logic);
end AND2;

architecture beh of AND2 is
  signal VCC : std_logic ;
  signal GND : std_logic ;
begin
VCC <= '1';
GND <= '0';
O <= I0 and I1  after 100 ps;
end beh;

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity IBUF is
port(
O :  out std_logic;
I0 :  in std_logic);
end IBUF;

architecture beh of IBUF is
signal VCC : std_logic ;
signal GND : std_logic ;
begin
O <= I0;
VCC <= '1';
GND <= '0';
end beh;

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity INV is
port(
O :  out std_logic;
I0 :  in std_logic);
end INV;

architecture beh of INV is
signal VCC : std_logic ;
signal GND : std_logic ;
begin
O <= not I0;
VCC <= '1';
GND <= '0';
end beh;

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity OBUF is
port(
O :  out std_logic;
I0 :  in std_logic);
end OBUF;

architecture beh of OBUF is
signal VCC : std_logic ;
signal GND : std_logic ;
begin
O <= I0;
VCC <= '1';
GND <= '0';
end beh;

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity OR2 is
port(
O :  out std_logic;
I0 :  in std_logic;
I1 :  in std_logic);
end OR2;

architecture beh of OR2 is
signal VCC : std_logic ;
signal GND : std_logic ;
begin
VCC <= '1';
GND <= '0';
O <= I0 or I1  after 100 ps;
end beh;

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity XOR2 is
port(
O :  out std_logic;
I0 :  in std_logic;
I1 :  in std_logic);
end XOR2;

architecture beh of XOR2 is
signal VCC : std_logic ;
signal GND : std_logic ;
begin
VCC <= '1';
GND <= '0';
O <= I0 xor I1  after 100 ps;
end beh;

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;

entity converter_loop is
port(
p :  in std_logic;
q :  in std_logic;
r :  in std_logic;
s :  in std_logic;
a :  out std_logic;
b :  out std_logic;
c :  out std_logic;
d :  out std_logic);
end converter_loop;

architecture beh of converter_loop is
signal \LOOPY.0.OUTPUT_5\ : std_logic_vector(3 downto 2);
signal INPUT_2 : std_logic_vector(2 to 2);
signal INPUT_2_I : std_logic_vector(3 to 3);
signal INPUT_2_I_I : std_logic_vector(3 to 3);
signal \LOOPY.0.OP_LT.OUTPUT14\ : std_logic ;
signal N_7 : std_logic ;
signal N_22 : std_logic ;
signal N_25 : std_logic ;
signal N_28 : std_logic ;
signal N_28_I : std_logic ;
signal \LOOPY.0.OP_LT.OUTPUT14_I\ : std_logic ;
signal P_I : std_logic ;
signal A_I : std_logic ;
signal R_I : std_logic ;
signal P_C : std_logic ;
signal Q_C : std_logic ;
signal R_C : std_logic ;
signal A_C : std_logic ;
signal N_22_I : std_logic ;
signal N_25_0 : std_logic ;
signal GND : std_logic ;
signal VCC : std_logic ;
signal \LOOPY.0.OUTPUT_5_2_.UN3\ : std_logic ;
signal \LOOPY.0.OUTPUT_5_2_.UN1\ : std_logic ;
signal \LOOPY.0.OUTPUT_5_2_.UN0\ : std_logic ;
component IBUF
port(
O :  out std_logic;
I0 :  in std_logic  );
end component;
component OBUF
port(
O :  out std_logic;
I0 :  in std_logic  );
end component;
component INV
port(
O :  out std_logic;
I0 :  in std_logic  );
end component;
component AND2
port(
O :  out std_logic;
I0 :  in std_logic;
I1 :  in std_logic  );
end component;
component XOR2
port(
O :  out std_logic;
I0 :  in std_logic;
I1 :  in std_logic  );
end component;
component OR2
port(
O :  out std_logic;
I0 :  in std_logic;
I1 :  in std_logic  );
end component;
begin
P_Z38: IBUF port map (
O => P_C,
I0 => p);
Q_Z39: IBUF port map (
O => Q_C,
I0 => q);
R_Z40: IBUF port map (
O => R_C,
I0 => r);
S_Z41: IBUF port map (
O => A_C,
I0 => s);
A_Z42: OBUF port map (
O => a,
I0 => A_C);
B_Z43: OBUF port map (
O => b,
I0 => N_28_I);
C_Z44: OBUF port map (
O => c,
I0 => \LOOPY.0.OUTPUT_5\(2));
D_Z45: OBUF port map (
O => d,
I0 => \LOOPY.0.OUTPUT_5\(3));
N_22_I_Z46: INV port map (
O => N_22_I,
I0 => N_22);
G_26_I: INV port map (
O => N_25,
I0 => N_25_0);
G_4: AND2 port map (
O => N_7,
I0 => Q_C,
I1 => R_C);
A_I_Z49: INV port map (
O => A_I,
I0 => A_C);
R_I_Z50: INV port map (
O => R_I,
I0 => R_C);
G_23: AND2 port map (
O => N_22,
I0 => A_I,
I1 => R_I);
G_26: AND2 port map (
O => N_25_0,
I0 => N_22_I,
I1 => Q_C);
P_I_Z53: INV port map (
O => P_I,
I0 => P_C);
G_27: AND2 port map (
O => \LOOPY.0.OP_LT.OUTPUT14\,
I0 => N_25,
I1 => P_I);
G_3: XOR2 port map (
O => INPUT_2(2),
I0 => Q_C,
I1 => R_C);
G_5: XOR2 port map (
O => INPUT_2_I(3),
I0 => N_7,
I1 => P_C);
\LOOPY.0.OUTPUT_5_2_.R\: INV port map (
O => \LOOPY.0.OUTPUT_5_2_.UN3\,
I0 => \LOOPY.0.OP_LT.OUTPUT14\);
\LOOPY.0.OUTPUT_5_2_.M\: AND2 port map (
O => \LOOPY.0.OUTPUT_5_2_.UN1\,
I0 => Q_C,
I1 => \LOOPY.0.OP_LT.OUTPUT14\);
\LOOPY.0.OUTPUT_5_2_.N\: AND2 port map (
O => \LOOPY.0.OUTPUT_5_2_.UN0\,
I0 => INPUT_2(2),
I1 => \LOOPY.0.OUTPUT_5_2_.UN3\);
\LOOPY.0.OUTPUT_5_2_.P\: OR2 port map (
O => \LOOPY.0.OUTPUT_5\(2),
I0 => \LOOPY.0.OUTPUT_5_2_.UN1\,
I1 => \LOOPY.0.OUTPUT_5_2_.UN0\);
GND <= '0';
VCC <= '1';
\INPUT_2_I_I[3]_Z63\: INV port map (
O => INPUT_2_I_I(3),
I0 => INPUT_2_I(3));
\LOOPY.0.OP_LT.OUTPUT14_I_Z64\: INV port map (
O => \LOOPY.0.OP_LT.OUTPUT14_I\,
I0 => \LOOPY.0.OP_LT.OUTPUT14\);
\LOOPY.0.OUTPUT_5[3]_Z65\: AND2 port map (
O => \LOOPY.0.OUTPUT_5\(3),
I0 => INPUT_2_I_I(3),
I1 => \LOOPY.0.OP_LT.OUTPUT14_I\);
\LOOPY.0.OUTPUT_5[1]\: XOR2 port map (
O => N_28,
I0 => \LOOPY.0.OP_LT.OUTPUT14\,
I1 => R_C);
N_28_I_Z67: INV port map (
O => N_28_I,
I0 => N_28);
end beh;

